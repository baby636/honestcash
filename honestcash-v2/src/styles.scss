/* You can add global styles to this file, and also import other style files */

/* Overwrites to bootstrap should come on top before imports */
$grid-breakpoints: (
  xxxs: 0,
  xxs: 320px,
  xs: 568px, /* this does not exist in bootstrap */
  sm: 667px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
);

$container-max-widths: (
  xxxs: 0,
  xxs: 320px,
  xs: 568px, /* this does not exist in bootstrap */
  sm: 667px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
);

@import "~bootstrap/scss/bootstrap";
@import 'core/shared/styles/_background-opacity';
@import 'core/shared/styles/_opacity';
@import '~bootstrap/scss/_variables.scss';
@import '~ngx-toastr/toastr-bs4-alert';

html,
body {
  min-height: 100vh;
  height: auto;
  margin: 0;
  overflow-x: hidden;
}

.ng-touched.ng-invalid {
  border-color: #dc3545;
}

.cursor-pointer {
  cursor: pointer;
}

/*"primary":    $primary,
"secondary":  $secondary,
"success":    $success,
"info":       $info,
"warning":    $warning,
"danger":     $danger,
"light":      $light,
"dark":       $dark*/

input[type='checkbox']{
  position: absolute; // take it out of document flow
  opacity: 0; // hide it

  & + label {
    position: relative;
    cursor: pointer;
    padding: 0;
  }

  // Box.
  & + label:before {
    content: '';
    margin-right: 10px;
    display: inline-block;
    vertical-align: text-top;
    width: 20px;
    height: 20px;
    background: white;
    border: 1px solid $border-color;
    border-radius: $border-radius;
  }

  // Box hover
  &:hover + label:before {
    background: $primary;
  }

  // Box focus
  &:focus + label:before {
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12);
  }

  // Box checked
  &:checked + label:before {
    background: $primary;
  }

  // Disabled state label.
  &:disabled + label {
    color: #b8b8b8;
    cursor: auto;
  }

  // Disabled box.
  &:disabled + label:before {
    box-shadow: none;
    background: #ddd;
  }

  // Checkmark. Could be replaced with an image
  &:checked + label:after {
    content: '';
    position: absolute;
    left: 5px;
    top: 9px;
    background: white;
    width: 2px;
    height: 2px;
    box-shadow:
      2px 0 0 white,
      4px 0 0 white,
      4px -2px 0 white,
      4px -4px 0 white,
      4px -6px 0 white,
      4px -8px 0 white;
    transform: rotate(45deg);
  }
}

.checkbox-primary {
  // Box hover
  &:hover + label:before {
    background: $primary;
  }

  // Box checked
  &:checked + label:before {
    background: $primary;
  }
}

.checkbox-secondary {
  // Box hover
  &:hover + label:before {
    background: $secondary;
  }


  // Box checked
  &:checked + label:before {
    background: $secondary;
  }
}

.checkbox-success {
  // Box hover
  &:hover + label:before {
    background: $success;
  }

  // Box checked
  &:checked + label:before {
    background: $success;
  }
}

.checkbox-info {
  // Box hover
  &:hover + label:before {
    background: $info;
  }

  // Box checked
  &:checked + label:before {
    background: $info;
  }
}

.checkbox-warning {
  // Box hover
  &:hover + label:before {
    background: $warning;
  }

  // Box checked
  &:checked + label:before {
    background: $warning;
  }
}


.checkbox-danger {
  // Box hover
  &:hover + label:before {
    background: $danger;
  }

  // Box checked
  &:checked + label:before {
    background: $danger;
  }
}

